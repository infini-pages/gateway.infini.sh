<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>入门指南 on INFINI Gateway</title><link>/v1.4.0/docs/getting-started/</link><description>Recent content in 入门指南 on INFINI Gateway</description><generator>Hugo -- gohugo.io</generator><atom:link href="/v1.4.0/docs/getting-started/index.xml" rel="self" type="application/rss+xml"/><item><title>安装网关</title><link>/v1.4.0/docs/getting-started/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/v1.4.0/docs/getting-started/install/</guid><description>安装网关 # 极限网关支持主流的操作系统和平台，程序包很小，没有任何额外的外部依赖，安装起来应该是很快的 ：）
安装演示 # 下载安装 # 根据您所在的操作系统和平台选择下面相应的下载地址：
http://release.elasticsearch.cn/gateway/stable/
最新快照的下载地址访问：这里 容器部署 # 极限网关也支持 Docker 容器方式部署。
了解更多 验证安装 # 极限网关下载解压之后，我们可以执行这个命令来验证安装包是否有效，如下：
✗ ./bin/gateway -v gateway 1.0.0_SNAPSHOT 2021-01-03 22:45:28 6a54bb2 如果能够正常看到上面的版本信息，说明网关程序本身一切正常。
启动网关 # 以管理员身份直接运行网关程序即可启动极限网关了，如下：
➜ sudo ./bin/gateway ___ _ _____ __ __ __ _ / _ \ /_\ /__ \/__\/ / /\ \ \/_\ /\_/\ / /_\///_\\ / /\/_\ \ \/ \/ //_\\\_ _/ / /_\\/ _ \/ / //__ \ /\ / _ \/ \ \____/\_/ \_/\/ \__/ \/ \/\_/ \_/\_/ [GATEWAY] A light-weight, powerful and high-performance elasticsearch gateway.</description></item><item><title>配置网关</title><link>/v1.4.0/docs/getting-started/configuration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/v1.4.0/docs/getting-started/configuration/</guid><description>配置 # 极限网关支持多种方式来修改配置。
命令行参数 # 极限网关提供了命令行参数如下：
✗ ./bin/gateway --help Usage of ./bin/gateway: -config string the location of config file, default: gateway.yml (default &amp;quot;gateway.yml&amp;quot;) -cpu int the number of CPUs to use (default -1) -cpuprofile string write cpu profile to this file -daemon run in background as daemon -debug run in debug mode, gateway will quit with panic error -log string the log level,options:trace,debug,info,warn,error (default &amp;quot;info&amp;quot;) -memprofile string write memory profile to this file -pidfile string pidfile path (only for daemon mode) -pprof string enable and setup pprof/expvar service, eg: localhost:6060 , the endpoint will be: http://localhost:6060/debug/pprof/ and http://localhost:6060/debug/vars -v version 常用的说明如下：</description></item><item><title>容器部署</title><link>/v1.4.0/docs/getting-started/docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/v1.4.0/docs/getting-started/docker/</guid><description>容器部署 # 极限网关支持容器方式部署，可以运行在 K8s 集群环境。
安装演示 # 下载镜像 # 极限网关的镜像发布在 Docker 的官方仓库，地址如下：
https://hub.docker.com/r/infinilabs/gateway
使用下面的命令即可获取最新的容器镜像：
docker pull infinilabs/gateway:latest 验证镜像 # 将镜像下载到本地之后，可以看到极限网关的容器镜像非常小，只有不到 25MB，所以下载的速度应该是非常快的。
✗ docker images REPOSITORY TAG IMAGE ID CREATED SIZE infinilabs/gateway latest fdae74b64e1a 47 minutes ago 23.5MB 创建配置 # 现在需要创建一个配置文件 gateway.yml，来进行基本的配置，如下：
path.data: data path.logs: log entry: - name: my_es_entry enabled: true router: my_router max_concurrency: 200000 network: binding: 0.0.0.0:8000 - name: my_es_entry1 enabled: true router: my_router max_concurrency: 200000 network: binding: 0.</description></item><item><title>系统调优</title><link>/v1.4.0/docs/getting-started/optimization/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/v1.4.0/docs/getting-started/optimization/</guid><description>系统调优 # 要保证极限网关运行在最佳状态，其所在服务器的操作系统也需要进行相应的调优，以 Linux 为例。
系统参数 # vi /etc/security/limits.conf
* soft nofile 1024000 * hard nofile 1024000 * soft memlock unlimited * hard memlock unlimited root soft nofile 1024000 root hard nofile 1024000 root soft memlock unlimited 内核调优 # vi /etc/sysctl.conf
net.ipv4.ip_forward = 1 net.ipv4.conf.default.accept_redirects = 0 net.ipv4.conf.default.rp_filter = 1 net.ipv4.conf.all.accept_redirects = 0 net.ipv4.conf.all.send_redirects = 0 net.ipv4.ip_nonlocal_bind=1 net.ipv4.tcp_tw_reuse=1 net.ipv4.tcp_timestamps=1 net.ipv4.tcp_syncookies=1 net.ipv4.tcp_max_syn_backlog=65535 net.ipv4.tcp_synack_retries=0 net.core.somaxconn=32768 net.core.netdev_max_backlog=65535 net.core.rmem_max=4194304 net.core.wmem_max=4194304 fs.file-max=10485760 vm.</description></item><item><title>性能测试</title><link>/v1.4.0/docs/getting-started/benchmark/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/v1.4.0/docs/getting-started/benchmark/</guid><description>性能测试 # 推荐使用 Elasticsearch 专属压测工具 Loadgen 来对网关进行性能压测。
Loadgen 的特点：
性能强劲 轻量级无依赖 支持模板化参数随机 支持高并发 支持压测端均衡流量控制 下载地址： http://release.elasticsearch.cn/loadgen/
Loadgen # Loadgen 使用非常简单，下载解压之后会得到两个文件，一个可执行程序和一个配置文件 loadgen.yml，配置文件样例如下：
variables: - name: ip type: file path: test/ip.txt - name: user type: file path: test/user.txt - name: id type: sequence - name: uuid type: uuid - name: now_local type: now_local - name: now_utc type: now_utc - name: now_unix type: now_unix requests: - request: has_variable: true method: GET basic_auth: username: elastic password: pass url: http://localhost:8000/medcl/_search body: '{ &amp;quot;query&amp;quot;: {&amp;quot;match&amp;quot;: { &amp;quot;name&amp;quot;: &amp;quot;$[[user]]&amp;quot; }}}' 变量的使用 # 上面的配置中，variables 用来定义变量参数，根据 name 来设置变量标识，在构造请求的使用 $[[变量名]] 即可访问该变量的值，变量目前支持的类型有：</description></item></channel></rss>